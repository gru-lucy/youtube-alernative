(function(){function e(r,t,o){function n(l,i){if(!t[l]){if(!r[l]){var a="function"==typeof require&&require;if(!i&&a)return a(l,!0);if(s)return s(l,!0);var c=new Error("Cannot find module '"+l+"'");throw c.code="MODULE_NOT_FOUND",c}var u=t[l]={exports:{}};r[l][0].call(u.exports,(function(e){var t=r[l][1][e];return n(t||e)}),u,u.exports,e,r,t,o)}return t[l].exports}for(var s="function"==typeof require&&require,l=0;l<o.length;l++)n(o[l]);return n}return e})()({1:[function(e,r){r.exports=e=>{const{request:r}=e,{url:t,method:o,headers:n,destination:s}=r;return t.includes(self.registration.scope+"webtorrent/")?t.includes(self.registration.scope+"webtorrent/keepalive/")?new Response:clients.matchAll({type:"window",includeUncontrolled:!0}).then((e=>new Promise((r=>{for(const l of e){const e=new MessageChannel,{port1:i,port2:a}=e;i.onmessage=t=>{r([t.data,e])},l.postMessage({url:t,method:o,headers:Object.fromEntries(n.entries()),scope:self.registration.scope,destination:s,type:"webtorrent"},[a])}})))).then((([e,r])=>{if("STREAM"===e.body||"DOWNLOAD"===e.body){let t=null;return new Response(new ReadableStream({pull(o){return new Promise((n=>{r.port1.onmessage=e=>{if(e.data)o.enqueue(e.data);else{clearTimeout(t);try{o.close()}catch(s){console.log("close error",s)}r.port1.onmessage=null}return n()},clearTimeout(t),"STREAM"===e.body&&(t=setTimeout((()=>{try{o.close&&o.close()}catch(e){console.log("Close error",e)}r.port1.postMessage(!1),r.port1.onmessage=null,n()}),5e3)),r.port1.postMessage(!0)}))},cancel(){r.port1.postMessage(!1)}}),e)}return new Response(e.body,e)})).catch(console.error):null}},{}],2:[function(e){const r=e("./worker-server.js");self.addEventListener("install",(e=>{e.waitUntil(self.skipWaiting()),console.log("[ ServiceWorker ] Installed")})),self.addEventListener("fetch",(e=>{const t=r(e);t&&e.respondWith(t)})),self.addEventListener("activate",(e=>{console.log("[ ServiceWorker ] Activated"),e.waitUntil(self.clients.claim())}))},{"./worker-server.js":1}]},{},[2]);